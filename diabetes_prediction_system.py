# -*- coding: utf-8 -*-
"""Diabetes prediction system.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mRjetzUJI0c5fKsvtDaP4I5ETRr2mLfr
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

dd = pd.read_csv(r'C:\Users\Pranav\Desktop\Diabetes prediction system\diabetes.csv')

dd.shape
dd.head()
dd.describe()

dd['Outcome'].value_counts()

"""0 = non diabetic
1 = diabetic

"""

dd.groupby('Outcome').mean()

x = dd.drop(columns = 'Outcome', axis=1)
y = dd['Outcome']

print(x)
print(y)

"""Data Standardization"""

sc = StandardScaler()

sc.fit(x)

sd = sc.transform(x)

print(sd)

x = sd
y = dd['Outcome']

print(x)
print(y)

x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.2, stratify=y, random_state=2)

print(x_train, x_test, y_train, y_test)

"""Model training"""

classifier = svm.SVC(kernel = 'linear')

classifier.fit(x_train,y_train)

"""Accuracy"""

x_tp = classifier.predict(x_train)
td_accuracy = accuracy_score(x_tp, y_train)

print("training data accuracy score is: ", td_accuracy)

x_tsp = classifier.predict(x_test)
tsd_accuracy = accuracy_score(x_tsp, y_test)

print("testing data accuracy score is: ", tsd_accuracy)

"""prediction|"""

data = (7,196,90,0,0,39.8,0.451,41)

data_ndarray = np.asarray(data)

data_reshaped = data_ndarray.reshape(1,-1)

new_data = sc.transform(data_reshaped)
print(new_data)

prediction = classifier.predict(new_data)
print(prediction)

if (prediction[0] == 0):
  print('The person is not diabetic')
else:
  print('The person is diabetic')